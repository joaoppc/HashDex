{"version":3,"sources":["App.js","index.js"],"names":["App","props","sym","state","selectValue","localStorage","getItem","handleChange","bind","this","toLowerCase","socketTrade","WebSocket","myRequest","Request","socketOrder","fetch","then","response","json","x","length","document","getElementById","innerHTML","lineSeries","createChart","width","height","addLineSeries","onmessage","event","object","JSON","parse","data","console","log","update","time","t","value","p","am4core","am4themes_animated","chart","am4charts","dataSource","url","reloadFrequency","adapter","add","processData","list","type","desc","i","Number","volume","sort","a","b","totalvolume","dp","res","unshift","push","bids","asks","numberFormatter","numberFormat","xAxis","xAxes","dataFields","category","renderer","minGridDistance","title","text","toUpperCase","yAxes","series","categoryX","valueY","strokeWidth","stroke","fill","fillOpacity","tooltipText","series2","series3","series4","cursor","buy","sell","order","onopen","onerror","onclose","code","e","setState","target","setItem","window","location","reload","className","id","onChange","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c8da3a55.chunk.js","sourcesContent":["import './App.css'; \nimport React, {Component} from 'react';\nimport { createChart } from 'lightweight-charts';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\n\n\n\n\n\nclass App extends Component{\n   constructor(props){\n    super(props);\n    this.sym='btcusdt';\n    this.state = {\n      selectValue: localStorage.getItem('selected'),\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    \n\n  }  \n  \n  componentDidMount(){\n\n    \n    if (this.state.selectValue !== null){\n      this.sym = this.state.selectValue.toLowerCase()+'usdt'\n    }\n    \n    const socketTrade = new WebSocket(\"wss://stream.binance.com:9443/ws/\"+this.sym+\"@trade\");\n    const myRequest = new Request('https://api.hashdex.io/prod/marketdata/v1/index/HDAI/last');\n    const socketOrder = new WebSocket(\"wss://stream.binance.com:9443/ws/\"+this.sym+\"@depth10\");\n    \n    \n\n    \n    \n    \n\n    /////Asset constituent/////\n    fetch(myRequest).then(response=>response.json()).then(json=>{\n      for(var x=0;x<json['constituents'].length;x++){\n      document.getElementById('lista').innerHTML += json['constituents'][x]['assetId']+':    '+json['constituents'][x]['currentPrice']+\"<br>\";\n      document.getElementById('asset').innerHTML +=\"<option value=\"+json['constituents'][x]['assetId']+'>'+json['constituents'][x]['assetId']+'</option>'\n\n      }  \n      \n      \n    });\n    \n    const chartO = createChart(document.getElementById('chart'), { width: 1800, height: 400 });\n    const lineSeries = chartO.addLineSeries();\n    socketTrade.onmessage = function (event) {\n      var object = JSON.parse(event.data);\n      console.log(object)\n      ///////////price chart///////////////////\n      lineSeries.update({\n        time: object.t,\n        value: object.p\n      }); \n      ////////////////////////////////////////\n      \n    }\n\n\n    // Themes begin\n    am4core.useTheme(am4themes_animated);\n    // Themes end\n\n    // Create chart instance\n    var chart = am4core.create(\"orderChart\", am4charts.XYChart);\n    \n\n    // Add data\n    chart.dataSource.url = \"https://poloniex.com/public?command=returnOrderBook&currencyPair=USDT_\"+this.state.selectValue+\"&depth=50\";\n    chart.dataSource.reloadFrequency = 30000;\n    chart.dataSource.adapter.add(\"parsedData\", function(data) {\n      \n      // Function to process (sort and calculate cummulative volume)\n      function processData(list, type, desc) {\n\n        // Convert to data points\n        for(var i = 0; i < list.length; i++) {\n          list[i] = {\n            value: Number(list[i][0]),\n            volume: Number(list[i][1]),\n          }\n        }\n\n        // Sort list just in case\n        list.sort(function(a, b) {\n          if (a.value > b.value) {\n            return 1;\n          }\n          else if (a.value < b.value) {\n            return -1;\n          }\n          else {\n            return 0;\n          }\n        });\n\n        // Calculate cummulative volume\n        if (desc) {\n          for(var i = list.length - 1; i >= 0; i--) {\n            if (i < (list.length - 1)) {\n              list[i].totalvolume = list[i+1].totalvolume + list[i].volume;\n            }\n            else {\n              list[i].totalvolume = list[i].volume;\n            }\n            var dp = {};\n            dp[\"value\"] = list[i].value;\n            dp[type + \"volume\"] = list[i].volume;\n            dp[type + \"totalvolume\"] = list[i].totalvolume;\n            res.unshift(dp);\n          }\n        }\n        else {\n          for(var i = 0; i < list.length; i++) {\n            if (i > 0) {\n              list[i].totalvolume = list[i-1].totalvolume + list[i].volume;\n            }\n            else {\n              list[i].totalvolume = list[i].volume;\n            }\n            var dp = {};\n            dp[\"value\"] = list[i].value;\n            dp[type + \"volume\"] = list[i].volume;\n            dp[type + \"totalvolume\"] = list[i].totalvolume;\n            res.push(dp);\n          }\n        }\n\n      }\n\n      // Init\n      var res = [];\n      processData(data.bids, \"bids\", true);\n      processData(data.asks, \"asks\", false);\n\n      return res;\n    });\n\n    // Set up precision for numbers\n    chart.numberFormatter.numberFormat = \"#,###.####\";\n\n    // Create axes\n    var xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    xAxis.dataFields.category = \"value\";\n    //xAxis.renderer.grid.template.location = 0;\n    xAxis.renderer.minGridDistance = 100;\n    xAxis.title.text = this.state.selectValue.toUpperCase()+\"/USDT\";\n\n    var yAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    yAxis.title.text = \"Volume\";\n\n    // Create series\n    var series = chart.series.push(new am4charts.StepLineSeries());\n    series.dataFields.categoryX = \"value\";\n    series.dataFields.valueY = \"bidstotalvolume\";\n    series.strokeWidth = 2;\n    series.stroke = am4core.color(\"#0f0\");\n    series.fill = series.stroke;\n    series.fillOpacity = 0.1;\n    series.tooltipText = \"Ask: [bold]{categoryX}[/]\\nTotal volume: [bold]{valueY}[/]\\nVolume: [bold]{bidsvolume}[/]\"\n\n    var series2 = chart.series.push(new am4charts.StepLineSeries());\n    series2.dataFields.categoryX = \"value\";\n    series2.dataFields.valueY = \"askstotalvolume\";\n    series2.strokeWidth = 2;\n    series2.stroke = am4core.color(\"#f00\");\n    series2.fill = series2.stroke;\n    series2.fillOpacity = 0.1;\n    series2.tooltipText = \"Ask: [bold]{categoryX}[/]\\nTotal volume: [bold]{valueY}[/]\\nVolume: [bold]{asksvolume}[/]\"\n\n    var series3 = chart.series.push(new am4charts.ColumnSeries());\n    series3.dataFields.categoryX = \"value\";\n    series3.dataFields.valueY = \"bidsvolume\";\n    series3.strokeWidth = 0;\n    series3.fill = am4core.color(\"#000\");\n    series3.fillOpacity = 0.2;\n\n    var series4 = chart.series.push(new am4charts.ColumnSeries());\n    series4.dataFields.categoryX = \"value\";\n    series4.dataFields.valueY = \"asksvolume\";\n    series4.strokeWidth = 0;\n    series4.fill = am4core.color(\"#000\");\n    series4.fillOpacity = 0.2;\n\n    // Add cursor\n    chart.cursor = new am4charts.XYCursor(); \n\n\n\n////////////////////////////////////////////////////////////////////////////////////////\n\n    var buy = document.getElementById('buy');\n    var sell = document.getElementById('sell');\n    socketOrder.onmessage = function (event) {\n      buy.innerHTML = 'Buy<br>';\n      sell.innerHTML = 'Sell<br>';\n      var order = JSON.parse(event.data);\n      console.log(order)\n\n      for (let i = 0; i < 10; i++) {\n        buy.innerHTML +=\"Price: \"+ order.bids[i][0]+\"          Volume: \"+order.bids[i][1]+\"<br>\";\n        sell.innerHTML +=\"Price: \"+ order.asks[i][0]+\"          Volume: \"+order.asks[i][1]+\"<br>\";\n      }\n     \n    }\n    socketOrder.onopen = function(event){\n      console.log(event);\n    }\n    socketOrder.onerror = function (event) {\n      console.log(event.data);\n   };\n   socketOrder.onclose = function(event) {\n    if (event.code === 1000) {\n      console.log('WebSocket closed normally');\n    } else {\n        console.log('WebSocket closed unexpectedly: ' + event.code);\n    }\n  }\n   \n\n  }\n\n\n  \n  handleChange(e) {\n    console.log(\"Asset selected\");\n    this.setState({ selectValue: e.target.value });\n    localStorage.setItem('selected', e.target.value)\n    window.location.reload();\n  }\n  render() {\n    return(\n      <div className=\"App\">\n      <h2>\n        HashDex Dashboard\n      </h2>\n      <div>\n      {localStorage.getItem('selected')}\n        <select id = 'asset' onChange={this.handleChange}>\n          <option>Select</option>  \n\n        </select>\n      </div>\n      <div id='lista' className='App-lista'>\n      </div>\n      <div id ='order' className ='App-order'>\n        Asset:{localStorage.getItem('selected')}\n        <div id = 'buy' ></div>\n        <div id = 'sell'></div>\n        \n      </div>\n      <div className='App-chart' id='chart'>\n\n      </div>\n      <div id = 'orderChart' className='App-orderchart'>\n        \n      </div>\n      \n    </div>\n\n    );\n  }\n}\n\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}