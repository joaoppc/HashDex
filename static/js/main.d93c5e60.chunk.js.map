{"version":3,"sources":["App.js","index.js"],"names":["App","props","sym","localStorage","getItem","state","selectValue","handleChange","bind","document","title","this","toLowerCase","console","log","socketTrade","WebSocket","myRequest","Request","socketOrder","fetch","then","response","json","x","length","getElementById","innerHTML","areaSeries","createChart","width","height","layout","textColor","backgroundColor","rightPriceScale","scaleMargins","top","bottom","crosshair","vertLine","color","style","horzLine","visible","labelVisible","grid","vertLines","horzLines","addAreaSeries","topColor","bottomColor","lineColor","lineWidth","crossHairMarkerVisible","onmessage","event","object","JSON","parse","data","update","time","t","value","p","am4core","am4themes_animated","chart","am4charts","dataSource","url","reloadFrequency","adapter","add","processData","list","type","desc","i","Number","volume","sort","a","b","totalvolume","dp","res","unshift","push","bids","asks","numberFormatter","numberFormat","xAxis","xAxes","dataFields","category","renderer","minGridDistance","text","toUpperCase","yAxes","series","categoryX","valueY","strokeWidth","stroke","fill","fillOpacity","tooltipText","series2","series3","series4","cursor","buy","sell","order","e","setState","target","setItem","window","location","reload","className","id","onChange","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d93c5e60.chunk.js","sourcesContent":["import './App.css'; \nimport React, {Component} from 'react';\nimport { createChart } from 'lightweight-charts';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\n\n\n\n\n\nclass App extends Component{\n   constructor(props){\n    super(props);\n    this.sym='btcusdt';\n    if (localStorage.getItem('selected') !== null) {\n      this.state = {\n        selectValue: localStorage.getItem('selected'),\n      };\n      \n    } else {\n      this.state = {\n        selectValue: 'BTC',\n      };\n      \n    }\n\n    \n    \n    \n    \n    \n\n    this.handleChange = this.handleChange.bind(this);\n    \n\n  }  \n  \n  componentDidMount(){\n    document.title = \"Hashdex\";\n\n    \n    if (this.state.selectValue !== null){\n      this.sym = this.state.selectValue.toLowerCase()+'usdt';\n    }\n    else{\n      this.sym = 'btcusdt';\n    }\n    console.log(localStorage.getItem('selected'))\n    const socketTrade = new WebSocket(\"wss://stream.binance.com:9443/ws/\"+this.sym+\"@trade\");\n    const myRequest = new Request('https://api.hashdex.io/prod/marketdata/v1/index/HDAI/last');\n    const socketOrder = new WebSocket(\"wss://stream.binance.com:9443/ws/\"+this.sym+\"@depth10\");\n    \n    \n\n    \n    \n    \n\n    /////Asset constituent/////\n    fetch(myRequest).then(response=>response.json()).then(json=>{\n      for(var x=0;x<json['constituents'].length;x++){\n      document.getElementById('lista').innerHTML += json['constituents'][x]['assetId']+':    '+json['constituents'][x]['currentPrice']+\"<br>\";\n      document.getElementById('asset').innerHTML +=\"<option value=\"+json['constituents'][x]['assetId']+'>'+json['constituents'][x]['assetId']+'</option>'\n\n      }  \n      \n      \n    });\n    \n    var chartO = createChart(document.getElementById('chart'), {\n      width: 935,\n      height: 550,\n      layout: {\n        textColor: '#d1d4dc',\n        backgroundColor: '#000000',\n      },\n      rightPriceScale: {\n        scaleMargins: {\n          top: 0.3,\n          bottom: 0.25,\n        },\n      },\n      crosshair: {\n        vertLine: {\n          width: 5,\n          color: 'rgba(224, 227, 235, 0.1)',\n          style: 0,\n        },\n        horzLine: {\n          visible: false,\n          labelVisible: false,\n        },\n      },\n      grid: {\n        vertLines: {\n          color: 'rgba(42, 46, 57, 0)',\n        },\n        horzLines: {\n          color: 'rgba(42, 46, 57, 0)',\n        },\n      },\n    });\n    \n    var areaSeries = chartO.addAreaSeries({\n      topColor: 'rgba(38, 198, 218, 0.56)',\n      bottomColor: 'rgba(38, 198, 218, 0.04)',\n      lineColor: 'rgba(38, 198, 218, 1)',\n      lineWidth: 2,\n      crossHairMarkerVisible: false,\n    });\n    \n\n    \n\n    \n    socketTrade.onmessage = function (event) {\n      var object = JSON.parse(event.data);\n      ///////////price chart///////////////////\n      areaSeries.update({\n        time: object.t/1000,\n        value: object.p\n      }); \n      ////////////////////////////////////////\n      \n    }\n\n\n    // Themes begin\n    am4core.useTheme(am4themes_animated);\n    // Themes end\n\n    // Create chart instance\n    var chart = am4core.create(\"orderChart\", am4charts.XYChart);\n    \n\n    // Add data\n    \n    chart.dataSource.url = \"https://api.binance.com/api/v3/depth?symbol=\"+this.state.selectValue+\"USDT&limit=100\";\n    chart.dataSource.reloadFrequency = 30000;\n    chart.dataSource.adapter.add(\"parsedData\", function(data) {\n      \n      // Function to process (sort and calculate cummulative volume)\n      function processData(list, type, desc) {\n\n        // Convert to data points\n        for(var i = 0; i < list.length; i++) {\n          list[i] = {\n            value: Number(list[i][0]),\n            volume: Number(list[i][1]),\n          }\n        }\n\n        // Sort list just in case\n        list.sort(function(a, b) {\n          if (a.value > b.value) {\n            return 1;\n          }\n          else if (a.value < b.value) {\n            return -1;\n          }\n          else {\n            return 0;\n          }\n        });\n\n        // Calculate cummulative volume\n        if (desc) {\n          for(var i = list.length - 1; i >= 0; i--) {\n            if (i < (list.length - 1)) {\n              list[i].totalvolume = list[i+1].totalvolume + list[i].volume;\n            }\n            else {\n              list[i].totalvolume = list[i].volume;\n            }\n            var dp = {};\n            dp[\"value\"] = list[i].value;\n            dp[type + \"volume\"] = list[i].volume;\n            dp[type + \"totalvolume\"] = list[i].totalvolume;\n            res.unshift(dp);\n          }\n        }\n        else {\n          for(var i = 0; i < list.length; i++) {\n            if (i > 0) {\n              list[i].totalvolume = list[i-1].totalvolume + list[i].volume;\n            }\n            else {\n              list[i].totalvolume = list[i].volume;\n            }\n            var dp = {};\n            dp[\"value\"] = list[i].value;\n            dp[type + \"volume\"] = list[i].volume;\n            dp[type + \"totalvolume\"] = list[i].totalvolume;\n            res.push(dp);\n          }\n        }\n\n      }\n\n      // Init\n      var res = [];\n      processData(data.bids, \"bids\", true);\n      processData(data.asks, \"asks\", false);\n\n      return res;\n    });\n\n    // Set up precision for numbers\n    chart.numberFormatter.numberFormat = \"#,###.####\";\n\n    // Create axes\n    var xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    xAxis.dataFields.category = \"value\";\n    //xAxis.renderer.grid.template.location = 0;\n    xAxis.renderer.minGridDistance = 70;\n    if (this.state.selectValue !== null){\n      xAxis.title.text = this.state.selectValue.toUpperCase()+\"/USDT\";\n    }\n    else{\n      xAxis.title.text = \"BTC/USDT\"\n    }\n    \n\n    var yAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    yAxis.title.text = \"Volume\";\n\n    // Create series\n    var series = chart.series.push(new am4charts.StepLineSeries());\n    series.dataFields.categoryX = \"value\";\n    series.dataFields.valueY = \"bidstotalvolume\";\n    series.strokeWidth = 2;\n    series.stroke = am4core.color(\"#0f0\");\n    series.fill = series.stroke;\n    series.fillOpacity = 0.1;\n    series.tooltipText = \"Bid: [bold]{categoryX}[/]\\nTotal volume: [bold]{valueY}[/]\\nVolume: [bold]{bidsvolume}[/]\"\n\n    var series2 = chart.series.push(new am4charts.StepLineSeries());\n    series2.dataFields.categoryX = \"value\";\n    series2.dataFields.valueY = \"askstotalvolume\";\n    series2.strokeWidth = 2;\n    series2.stroke = am4core.color(\"#f00\");\n    series2.fill = series2.stroke;\n    series2.fillOpacity = 0.1;\n    series2.tooltipText = \"Ask: [bold]{categoryX}[/]\\nTotal volume: [bold]{valueY}[/]\\nVolume: [bold]{asksvolume}[/]\"\n\n    var series3 = chart.series.push(new am4charts.ColumnSeries());\n    series3.dataFields.categoryX = \"value\";\n    series3.dataFields.valueY = \"bidsvolume\";\n    series3.strokeWidth = 0;\n    series3.fill = am4core.color(\"#000\");\n    series3.fillOpacity = 0.2;\n\n    var series4 = chart.series.push(new am4charts.ColumnSeries());\n    series4.dataFields.categoryX = \"value\";\n    series4.dataFields.valueY = \"asksvolume\";\n    series4.strokeWidth = 0;\n    series4.fill = am4core.color(\"#000\");\n    series4.fillOpacity = 0.2;\n\n    // Add cursor\n    chart.cursor = new am4charts.XYCursor(); \n\n\n\n////////////////////////////////////////////////////////////////////////////////////////\n\n    var buy = document.getElementById('buy');\n    var sell = document.getElementById('sell');\n    socketOrder.onmessage = function (event) {\n      buy.innerHTML = 'Buy<br>';\n      sell.innerHTML = 'Sell<br>';\n      var order = JSON.parse(event.data);\n\n      for (let i = 0; i < 10; i++) {\n        buy.innerHTML +=\"Price: \"+ order.bids[i][0]+\"          Volume: \"+order.bids[i][1]+\"<br>\";\n        sell.innerHTML +=\"Price: \"+ order.asks[i][0]+\"          Volume: \"+order.asks[i][1]+\"<br>\";\n      }\n     \n    }\n/*     socketOrder.onopen = function(event){\n      console.log(event);\n    }\n    socketOrder.onerror = function (event) {\n      console.log(event.data);\n   };\n   socketOrder.onclose = function(event) {\n    if (event.code === 1000) {\n      console.log('WebSocket closed normally');\n    } else {\n        console.log('WebSocket closed unexpectedly: ' + event.code);\n    }\n  } */\n   \n\n  }\n\n\n  \n  handleChange(e) {\n    console.log(\"Asset selected\");\n    this.setState({ selectValue: e.target.value });\n    localStorage.setItem('selected', e.target.value)\n    window.location.reload();\n  }\n  render() {\n    return(\n      <div className=\"App\">\n        <h2>\n          HashDex Dashboard\n        </h2>\n        <div>\n        \n          <select id = 'asset' onChange={this.handleChange}>\n            <option>Select</option>  \n          </select>\n          <h3>{this.state.selectValue}</h3>\n        </div>\n        <div className = 'App-firstRow'>\n          <div className = 'App-lista-container'>\n            <h4>Constituents prices USD</h4>\n            <div id='lista' className='App-lista'>\n            </div>\n            <div className='App-chart' id='chart'>\n              <h4>Trade Chart {this.state.selectValue+\"/USD\"}</h4>\n            </div>\n          </div>\n        </div>\n        <div className = 'App-secondRow'>\n          <div id ='order' className ='App-order'>\n            <h4>Order Book {this.state.selectValue+\"/USD\"}</h4>\n            <div id = 'buy' className = 'App-buy' ></div>\n            <div id = 'sell' className = 'App-sell'></div>\n          </div>\n      \n          <div id = 'orderChart' className='App-orderchart'> \n          </div>\n        </div>\n      \n      </div>\n\n    );\n  }\n}\n\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}